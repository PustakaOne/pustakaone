name: Deployment

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "NEXT_PUBLIC_IDENTITY_URL=${{ secrets.NEXT_PUBLIC_IDENTITY_URL }}" >> .env
          echo "NEXT_PUBLIC_BOOKSHOP_URL=${{ secrets.NEXT_PUBLIC_BOOKSHOP_URL }}" >> .env
          echo "NEXT_PUBLIC_ADMIN_URL=${{ secrets.NEXT_PUBLIC_ADMIN_URL }}" >> .env
      - name: Docker login
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login -u ${{ secrets.REGISTRY_USER }} --password-stdin docker.io
      - name: Set Docker BuildKit
        run: export DOCKER_BUILDKIT=1
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.REGISTRY_USER }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }} .
          docker push ${{ secrets.REGISTRY_USER }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: publish
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install SSH client
        run: sudo apt-get install openssh-client
      - name: Create SSH key
        run: echo "${{ secrets.SSH_KEY }}" > ssh-key.pem && cat ssh-key.pem
      - name: Update permission
        run: chmod 400 ssh-key.pem
      - name: Deploy to GCP
        run: |
          ssh -o StrictHostKeyChecking=no -i ssh-key.pem ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_STATIC_IP }} "
            sudo docker container rm -f ${{ secrets.CONTAINER_NAME }} || true &&
            sudo docker image rm -f ${{ secrets.REGISTRY_USER }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }} || true &&
            sudo docker run --name ${{ secrets.CONTAINER_NAME }} -d -p 3000:3000 ${{ secrets.REGISTRY_USER }}/${{ secrets.IMAGE_NAME }}:${{ secrets.IMAGE_TAG }}"

